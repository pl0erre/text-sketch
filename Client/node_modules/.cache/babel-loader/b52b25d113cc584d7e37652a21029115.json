{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"querystring\";\nexport default class Auth {\n  constructor(domain) {\n    this.domain = domain || process.env.REACT_APP_API; //! set correct url in .env\n\n    this.login = this.login.bind(this);\n  }\n\n  login(username, password) {\n    return axios({\n      method: \"POST\",\n      url: \"/auth/login\",\n      baseURL: this.domain,\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify({\n        username,\n        password\n      })\n    }).then(response => {\n      this.setUser(response.data);\n    });\n  }\n\n  signup({\n    username,\n    email,\n    password,\n    password_repeat\n  }) {\n    return axios({\n      method: \"POST\",\n      url: \"/auth/signup\",\n      baseURL: this.domain,\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify({\n        username,\n        email,\n        lastname,\n        password,\n        email\n      })\n    }).then(response => {\n      this.setUser(response.data);\n      this.props.history.push('/');\n    });\n  }\n\n  loggedIn() {\n    const user = this.getUser();\n    return !!user;\n  }\n\n  setUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  getUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  logout() {\n    return axios({\n      baseURL: this.domain,\n      url: \"/auth/logout\"\n    }).then(res => {\n      localStorage.removeItem('user');\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/luca/code/Project_3/text-sketch/src/Utils/Auth.js"],"names":["axios","qs","Auth","constructor","domain","process","env","REACT_APP_API","login","bind","username","password","method","url","baseURL","headers","data","stringify","then","response","setUser","signup","email","password_repeat","lastname","props","history","push","loggedIn","user","getUser","localStorage","setItem","JSON","parse","getItem","logout","res","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,aAAf;AAEA,eAAe,MAAMC,IAAN,CAAW;AACxBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKA,MAAL,GAAcA,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYC,aAApC,CADkB,CACiC;;AACnD,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACD;;AAEDD,EAAAA,KAAK,CAACE,QAAD,EAAWC,QAAX,EAAqB;AACxB,WAAOX,KAAK,CAAC;AACTY,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAE,aAFI;AAGTC,MAAAA,OAAO,EAAE,KAAKV,MAHL;AAITW,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAJA;AAKTC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,SAAH,CAAa;AAACP,QAAAA,QAAD;AAAWC,QAAAA;AAAX,OAAb;AALG,KAAD,CAAL,CAONO,IAPM,CAOAC,QAAD,IAAa;AACjB,WAAKC,OAAL,CAAaD,QAAQ,CAACH,IAAtB;AACD,KATM,CAAP;AAUD;;AAEDK,EAAAA,MAAM,CAAC;AAACX,IAAAA,QAAD;AAAWY,IAAAA,KAAX;AAAkBX,IAAAA,QAAlB;AAA4BY,IAAAA;AAA5B,GAAD,EAA+C;AACnD,WAAOvB,KAAK,CAAC;AACTY,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,GAAG,EAAE,cAFI;AAGTC,MAAAA,OAAO,EAAE,KAAKV,MAHL;AAITW,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAJA;AAKTC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,SAAH,CAAa;AAACP,QAAAA,QAAD;AAAWY,QAAAA,KAAX;AAAkBE,QAAAA,QAAlB;AAA4Bb,QAAAA,QAA5B;AAAsCW,QAAAA;AAAtC,OAAb;AALG,KAAD,CAAL,CAONJ,IAPM,CAOAC,QAAD,IAAa;AACjB,WAAKC,OAAL,CAAaD,QAAQ,CAACH,IAAtB;AACA,WAAKS,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KAVM,CAAP;AAWD;;AAEDC,EAAAA,QAAQ,GAAE;AACR,UAAMC,IAAI,GAAG,KAAKC,OAAL,EAAb;AACA,WAAO,CAAC,CAACD,IAAT;AACD;;AAEDT,EAAAA,OAAO,CAACS,IAAD,EAAM;AACXE,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAAChB,SAAL,CAAeY,IAAf,CAA7B;AACD;;AAEDC,EAAAA,OAAO,GAAE;AACP,WAAOG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACI,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,WAAOpC,KAAK,CAAC;AACTc,MAAAA,OAAO,EAAE,KAAKV,MADL;AAETS,MAAAA,GAAG,EAAE;AAFI,KAAD,CAAL,CAINK,IAJM,CAIAmB,GAAD,IAAQ;AACVN,MAAAA,YAAY,CAACO,UAAb,CAAwB,MAAxB;AACH,KANM,CAAP;AAOD;;AAtDuB","sourcesContent":["import axios from \"axios\";\nimport qs from \"querystring\";\n\nexport default class Auth {\n  constructor(domain) {\n    this.domain = domain || process.env.REACT_APP_API; //! set correct url in .env\n    this.login = this.login.bind(this);\n  }\n\n  login(username, password) {\n    return axios({\n        method: \"POST\",\n        url: \"/auth/login\",\n        baseURL: this.domain,\n        headers: { 'content-type': 'application/x-www-form-urlencoded' },\n        data: qs.stringify({username, password}),\n    })\n    .then((response)=> {\n      this.setUser(response.data)\n    })\n  }\n\n  signup({username, email, password, password_repeat}) {\n    return axios({\n        method: \"POST\",\n        url: \"/auth/signup\",\n        baseURL: this.domain,\n        headers: { 'content-type': 'application/x-www-form-urlencoded' },\n        data: qs.stringify({username, email, lastname, password, email}),\n    })\n    .then((response)=> {\n      this.setUser(response.data);\n      this.props.history.push('/');\n    })\n  }\n\n  loggedIn(){\n    const user = this.getUser()\n    return !!user; \n  }\n\n  setUser(user){\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  getUser(){\n    return JSON.parse(localStorage.getItem('user'));\n  }\n\n  logout(){\n    return axios({\n        baseURL: this.domain,\n        url: \"/auth/logout\"\n    })\n    .then((res)=> {\n        localStorage.removeItem('user');\n    })\n  }    \n}"]},"metadata":{},"sourceType":"module"}